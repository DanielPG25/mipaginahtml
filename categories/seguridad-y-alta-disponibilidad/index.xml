<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Seguridad y Alta Disponibilidad on Sysadblog</title>
    <link>https://sysadblog.onrender.com/categories/seguridad-y-alta-disponibilidad/</link>
    <description>Recent content in Seguridad y Alta Disponibilidad on Sysadblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 03 Feb 2022 12:53:12 +0100</lastBuildDate><atom:link href="https://sysadblog.onrender.com/categories/seguridad-y-alta-disponibilidad/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ejercicio 3: Implementación de un cortafuegos perimetral (iptables)</title>
      <link>https://sysadblog.onrender.com/posts/ejercicio3_cortafuegosperimetral_iptables/</link>
      <pubDate>Thu, 03 Feb 2022 12:53:12 +0100</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/ejercicio3_cortafuegosperimetral_iptables/</guid>
      <description>Ejercicio 3: Implementación de un cortafuegos perimetral (iptables)    Configura un cortafuegos perimetral en una máquina con dos interfaces de red (externa e interna). Debes controlar el tráfico a la máquina cortafuego y el trafico a los equipos de la LAN.
Realiza la configuración necesaria para que el cortafuegos sea consistente.
Antes de implementar dicho cortafuegos, vamos a partir de la posición inicial de que las máquinas de la LAN pueden navegar libremente por Internet, por lo que la máquina que actúa como cortafuegos y como router tiene activado el bit de forwarding y la regla de SNAT necesaria:</description>
    </item>
    
    <item>
      <title>Ejercicio 2: Implementación de un cortafuegos personal (nftables)</title>
      <link>https://sysadblog.onrender.com/posts/ejercicio2_cortafuegos_personal_nftables/</link>
      <pubDate>Mon, 31 Jan 2022 09:09:39 +0100</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/ejercicio2_cortafuegos_personal_nftables/</guid>
      <description>Vamos a realizar los primeros pasos para implementar un cortafuegos en un nodo de una red, aquel que se ejecuta en el propio equipo que trata de proteger, lo que a veces se denomina un cortafuegos personal. He usado contenedores virtuales LXC.
Una de las diferencias de usar nftables es que las tablas y cadenas son totalmente configurables. En nftables lo primero que tenemos que hacer es crear las tablas (son las zonas en las que crearemos las distintas reglas del cortafuegos clasificadas en cadenas).</description>
    </item>
    
    <item>
      <title>Ejercicio 1: Implementación de un cortafuegos personal (iptables)</title>
      <link>https://sysadblog.onrender.com/posts/ejercicio1_cortafuegos_personal_iptables/</link>
      <pubDate>Tue, 25 Jan 2022 18:25:31 +0100</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/ejercicio1_cortafuegos_personal_iptables/</guid>
      <description>Ejercicio 1: Implementación de un cortafuegos personal (iptables)    Vamos a realizar los primeros pasos para implementar un cortafuegos en un nodo de una red, aquel que se ejecuta en el propio equipo que trata de proteger, lo que a veces se denomina un cortafuegos personal. He usado contenedores virtuales LXC.
Para empezar vamos a tener que eliminar las reglas anteriores que hubiera en el cortafuegos:
iptables -F iptables -t nat -F iptables -Z iptables -t nat -Z Y añadimos las reglas necesarias para asegurar que podemos seguir trabajando mediante ssh:</description>
    </item>
    
    <item>
      <title>Configuración de VPN en OpenVPN y Wireguard</title>
      <link>https://sysadblog.onrender.com/posts/practica_vpn/</link>
      <pubDate>Tue, 21 Dec 2021 13:18:10 +0100</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/practica_vpn/</guid>
      <description>Redes Privadas Virtuales (VPN)    VPN de acceso remoto con OpenVPN y certificados x509    Configura una conexión VPN de acceso remoto entre dos equipos del cloud:
 Uno de los dos equipos (el que actuará como servidor) estará conectado a dos redes Para la autenticación de los extremos se usarán obligatoriamente certificados digitales, que se generarán utilizando openssl y se almacenarán en el directorio /etc/openvpn, junto con los parámetros Diffie-Hellman y el certificado de la propia Autoridad de Certificación.</description>
    </item>
    
    <item>
      <title>Certificados Digitales y HTTPS</title>
      <link>https://sysadblog.onrender.com/posts/practica_certificadosdigitales_https/</link>
      <pubDate>Wed, 01 Dec 2021 08:18:05 +0100</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/practica_certificadosdigitales_https/</guid>
      <description>Certificados digitales. HTTPS    Certificado digital de persona física    Tarea 1: Instalación del certificado    Una vez que hayas obtenido tu certificado, explica brevemente como se instala en tu navegador favorito.    Antes de instalar el certificado, e incluso antes de solicitarlo, debemos tener instalado el software necesario para ello. A continuación, tras rellenar los formularios adecuados y sacar cita para obtener el certificado, podemos ir a la autoridad certificadora y obtener el certificado.</description>
    </item>
    
    <item>
      <title>Integridad, firmas y autenticación</title>
      <link>https://sysadblog.onrender.com/posts/practica_integridad_firmas_autentificacion/</link>
      <pubDate>Sat, 20 Nov 2021 15:35:40 +0100</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/practica_integridad_firmas_autentificacion/</guid>
      <description>Integridad, firmas y autenticación    Tarea 1: Firmas electrónicas    En este primer apartado vamos a trabajar con las firmas electrónicas.
Manda un documento y la firma electrónica del mismo a un compañero. Verifica la firma que tu has recibido.    Para empezar, voy a mostrar las claves que tengo guardadas en mi &amp;ldquo;llavero&amp;rdquo; de claves de gpg:
gpg --list-keys gpg: comprobando base de datos de confianza gpg: marginals needed: 3 completes needed: 1 trust model: pgp gpg: nivel: 0 validez: 1 firmada: 0 confianza: 0-, 0q, 0n, 0m, 0f, 1u gpg: siguiente comprobación de base de datos de confianza el: 2021-12-15 /home/dparrales/.</description>
    </item>
    
    <item>
      <title>Cifrado asimétrico con gpg y openssl</title>
      <link>https://sysadblog.onrender.com/posts/cifradoasimetrico_gpg_openssl/</link>
      <pubDate>Sat, 13 Nov 2021 19:50:18 +0100</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/cifradoasimetrico_gpg_openssl/</guid>
      <description>Cifrado asimétrico con gpg y openssl    Tarea 1: Generación de claves (gpg)    Los algoritmos de cifrado asimétrico utilizan dos claves para el cifrado y descifrado de mensajes. Cada persona involucrada (receptor y emisor) debe disponer, por tanto, de una pareja de claves pública y privada. Para generar nuestra pareja de claves con gpg utilizamos la opción --gen-key:
Para esta práctica no es necesario que indiquemos frase de paso en la generación de las claves (al menos para la clave pública).</description>
    </item>
    
    <item>
      <title>Tomar el control de Metasploitable3</title>
      <link>https://sysadblog.onrender.com/posts/metasploitable3/</link>
      <pubDate>Mon, 11 Oct 2021 19:32:07 +0200</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/metasploitable3/</guid>
      <description>Tomar el control de la máquina Ubuntu de Metasploitable3 a través de un ataque de fuerza bruta por SSH    En esta parte vamos a utilizar una máquina con sistema operativo Kali Linux para tomar el control de una máquina Ubuntu creada a través de “Metasploitable3”, por lo que ha sido creada con multitud de vulnerabilidades que podremos aprovechar. En este caso en concreto, he optado por usar un ataque de fuerza bruta para conectarme por ssh a la máquina y una vez dentro escalar privilegios para convertirme en root, obteniendo así el control total de la máquina.</description>
    </item>
    
  </channel>
</rss>
