<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud Computing on Sysadblog</title>
    <link>https://sysadblog.onrender.com/categories/cloud-computing/</link>
    <description>Recent content in Cloud Computing on Sysadblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 12 Jan 2022 14:19:31 +0100</lastBuildDate><atom:link href="https://sysadblog.onrender.com/categories/cloud-computing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DRBD y OCFS2</title>
      <link>https://sysadblog.onrender.com/posts/drbd_ocfs2/</link>
      <pubDate>Wed, 12 Jan 2022 14:19:31 +0100</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/drbd_ocfs2/</guid>
      <description>DRBD y OCFS2    Configura un escenario con dos máquinas. Cada una tiene que tener dos discos adicionales (tamaño 1Gb para que la sincronización sea rápida).
 Crea dos recursos RDBD: wwwdata y dbdata. Cada uno utilizaran uno de los discos de cada máquina. Configura en modo Single-primary el recurso wwwdata.  Una vez creado y sincronizado el recurso, formatéalo con XFS. Monta el recurso en el nodo primario y crea un fichero.</description>
    </item>
    
    <item>
      <title>Trabajar con iSCSI</title>
      <link>https://sysadblog.onrender.com/posts/practica_trabajar_iscsi/</link>
      <pubDate>Mon, 06 Dec 2021 17:13:07 +0100</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/practica_trabajar_iscsi/</guid>
      <description>Trabajar con iSCSI    Configura un escenario donde tengas un servidor que exporte algunos targets por iSCSI y los conecte a diversos clientes, explicando con detalle la forma de trabajar.
  Crea un target con una LUN y conéctala a un cliente GNU/Linux. Explica cómo escaneas desde el cliente buscando los targets disponibles y utiliza la unidad lógica proporcionada, formateándola si es necesario y montándola.
  Utiliza systemd mount para que el target se monte automáticamente al arrancar el cliente.</description>
    </item>
    
    <item>
      <title>Sistemas de Ficheros Avanzados (BTRFS)</title>
      <link>https://sysadblog.onrender.com/posts/practica_sistemas_ficheros_avanzados/</link>
      <pubDate>Sun, 05 Dec 2021 16:58:06 +0100</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/practica_sistemas_ficheros_avanzados/</guid>
      <description>Sistemas de ficheros “avanzados” ZFS/Btrfs    Elige uno de los dos sistemas de ficheros “avanzados”.
  Crea un escenario que incluya una máquina y varios discos asociados a ella.
  Instala si es necesario el software de ZFS/Btrfs
  Gestiona los discos adicionales con ZFS/Btrfs
  Configura los discos en RAID, haciendo pruebas de fallo de algún disco y sustitución, restauración del RAID. Comenta ventajas e inconvenientes respecto al uso de RAID software con mdadm.</description>
    </item>
    
    <item>
      <title>Infraestructura de red router-nat desde OSC</title>
      <link>https://sysadblog.onrender.com/posts/routernat_osc/</link>
      <pubDate>Fri, 29 Oct 2021 20:05:56 +0200</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/routernat_osc/</guid>
      <description>Infraestructura de red router-nat desde OSC    Vamos a crear la siguiente infraestructura:
Con las siguientes características:
 Crea una red que se debe llamar “red_interna”, con direccionamiento 192.168.0.0/24, tendrá el DHCP activado, el gateway será el 192.168.0.1 y el DNS que reparte el 192.168.202.2. Crea una instancia a partir de una imagen, llamada router conecta a tu red y a la red “red_interna” en la dirección 192.168.0.1. Esta máquina será la puerta de enlace del la otra máquina.</description>
    </item>
    
    <item>
      <title>Infraestructura de red router-nat desde horizon</title>
      <link>https://sysadblog.onrender.com/posts/routernat-horizon/</link>
      <pubDate>Fri, 29 Oct 2021 09:49:22 +0200</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/routernat-horizon/</guid>
      <description>Infraestructura de red router-nat desde horizon    El escenario tendrá las siguientes características:
 Crea una red que se debe llamar “red_interna”, con direccionamiento 192.168.0.0/24, tendrá el DHCP activado, el gateway será el 192.168.0.1 y el DNS que reparte el 192.168.202.2. Crea una instancia a partir de una imagen, llamada router conecta a tu red y a la red “red_interna” en la dirección 192.168.0.1. Esta máquina será la puerta de enlace del la otra máquina.</description>
    </item>
    
    <item>
      <title>Ejercicios para trabajar con el almacenamiento en libvirt</title>
      <link>https://sysadblog.onrender.com/posts/almacemientolibvirt/</link>
      <pubDate>Mon, 11 Oct 2021 16:26:50 +0200</pubDate>
      
      <guid>https://sysadblog.onrender.com/posts/almacemientolibvirt/</guid>
      <description>Ejercicios para trabajar con el almacenamiento en libvirt    Crea un nuevo pool de almacenamiento de tipo lvm, y crea un volumen de 3Gi dentro que sea una volumen lógico. Con virt-install instala una máquina que se llame original_tunombre cuyo disco sea el volumen creado.    Lo primero es crear un fichero .xml que defina el pool de almacenamiento que vamos a crear:
&amp;lt;pool type=&amp;#39;logical&amp;#39;&amp;gt; &amp;lt;name&amp;gt;lvm-pool&amp;lt;/name&amp;gt; &amp;lt;capacity unit=&amp;#39;bytes&amp;#39;&amp;gt;5368709120&amp;lt;/capacity&amp;gt; &amp;lt;source&amp;gt; &amp;lt;name&amp;gt;vg1&amp;lt;/name&amp;gt; &amp;lt;/source&amp;gt; &amp;lt;target&amp;gt; &amp;lt;path&amp;gt;/home/dparrales/Descargas/pool-lvm&amp;lt;/path&amp;gt; &amp;lt;permissions&amp;gt; &amp;lt;mode&amp;gt;0711&amp;lt;/mode&amp;gt; &amp;lt;owner&amp;gt;0&amp;lt;/owner&amp;gt; &amp;lt;group&amp;gt;0&amp;lt;/group&amp;gt; &amp;lt;/permissions&amp;gt; &amp;lt;/target&amp;gt; &amp;lt;/pool&amp;gt; Después definimos el pool de almacenamiento y lo iniciamos:</description>
    </item>
    
  </channel>
</rss>
